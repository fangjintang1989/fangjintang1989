Chapter 4

This chapter’s main topic is about QA in context. It includes Defect Handling, QA in Software Processes, V&V Perspective. There are always some mistakes made in the software processes. We can use several defect measurement to improve the quality of software, through parallel to defect handling, consistent interpretation and so on. There is a V&V model and this model increases in various stages of development of software verification and validation activities should be carried out simultaneously. V&V model consists of two V-shaped models, namely representatives of testing and development process, double-V diagram clearly shows the parallel relationship between testing and development.Along with testing throughout the software development cycle, and the test is not only the procedures, requirements, design, also to be tested. Testing and development are carried out simultaneously. V&V model is conducive to the discovery of the problem as soon as possible overall.

Chapter 5

This chapter’s main topic is SQE process and some key SQE activities. The SQE process contains pre-QA planning, setting quality goals and forming QA strategy, analysis and feedback. Fitting SQE in software processes is about different start/end time, in waterfall process and more staged, etc. Besides, we can build a SQE effort profile.

Chapter 6

This chapter’s main topic is testing overview. It starts with why/how we testing, then planning and preparation and execution, analysis and followup. The White-box testing, also known as structural testing or logical drive test, is the internal structure of the program in accordance with the test procedure. This is a test to detect whether the action inside the product in accordance with the design specifications of the normal inspection procedures in each channel is able to press reserve requirements to work correctly. This approach is to test the object as an open box, testers based on the logical structure of the relevant information within the program, designed or selected test cases to test the program all logical paths through different points in the state inspection program to determine the actual if the state is consistent with the expected state. The Black-box testing, also known as functional testing, is through the test to detect whether each function can be used normally. In the test, the program can not be opened as a black box, in the case without considering the internal structure and internal characteristics of the program interface test, only checks whether the program functions is in accordance with the requirements specification for normal use, procedures to properly receive input data and produce the correct output. Black-box testing focuses on the external structure of the program, without regard to the internal logic structure, mainly for software interfaces and software features to be tested.
